language: java

branches:
  only:
  - development
  - master

dist: trusty

sudo: required

git:
  depth: 100
  
addons:
  apt:
    packages:
    - mysql-server-5.6
    - mysql-client-core-5.6
    - mysql-client-5.6

before_install:
  # CommandBox Keys
  - sudo apt-key adv --keyserver keys.gnupg.net --recv 6DA70622
  - sudo echo "deb http://downloads.ortussolutions.com/debs/noarch /" | sudo tee -a
    /etc/apt/sources.list.d/commandbox.list

install:
  # Install Commandbox
  - sudo apt-get update && sudo apt-get --assume-yes install haveged commandbox jq
  # Install dependencies
  - box version && box install
  # Store the Ortus API Key for forgebox publishing in `master`
  - box config set endpoints.forgebox.APIToken=$FORGEBOX_API_TOKEN > /dev/null

before_script:
  # create test database
  - mysql -u root -e 'create database contentbox;'
  # import database
  - mysql -u root < tests/resources/contentbox.sql
  # Ready for testing
  - box server start --debug

script:
  # Execute build via ANT
  - ant -DisTravis=true -Dbuild.number=$TRAVIS_BUILD_NUMBER -f build/build.xml
  # Get ContentBox Version for rest of build process
  - PROJECT_VERSION="$(cat build/build-contentbox/module/box.json | jq -r '.version')"
  # Spit out debugging info
  - cat build/build-contentbox/module/box.json
  - box server log
  - cat `box system-log`

deploy:
  # Upload binaries
  - provider: s3
    on:
      branch: 
        - development
        - master
    skip_cleanup: true
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_ACCESS_SECRET
    bucket: "downloads.ortussolutions.com"
    local-dir: artifacts
    upload-dir: ortussolutions
    acl: public_read
  # Upload api docs
  - provider: s3
    on:
      branch: 
        - development
        - master
    skip_cleanup: true
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_ACCESS_SECRET
    bucket: "apidocs.ortussolutions.com"
    local-dir: build/build-contentbox/apidocs
    upload-dir: contentbox/$PROJECT_VERSION
    acl: public_read

# Now publish assets to ForgeBox
after_deploy:
  >
  if [ $TRAVIS_PULL_REQUEST == true ]
    exit 0;
  fi

  echo Publishing Module - $TRAVIS_BRANCH
  cd $TRAVIS_BUILD_DIR/build/build-contentbox/module && box forgebox publish && cd $TRAVIS_BUILD_DIR;
  
  echo Publishing Site - $TRAVIS_BRANCH
  cd $TRAVIS_BUILD_DIR/build/build-contentbox/site && box forgebox publish && cd $TRAVIS_BUILD_DIR;
  
  echo Publishing Installer - $TRAVIS_BRANCH
  cd $TRAVIS_BUILD_DIR/build/build-contentbox/installer && box forgebox publish && cd $TRAVIS_BUILD_DIR;
  
  if [ $TRAVIS_BRANCH == 'development' ]; then
    echo Publishing Beta Updates Channel
    cd $TRAVIS_BUILD_DIR/build/build-contentbox/forgebox/beta-updates && box forgebox publish && cd $TRAVIS_BUILD_DIR;
  fi

  if [ $TRAVIS_BRANCH == 'master' ]; then
    echo Publishing Stable Updates Channel
    cd $TRAVIS_BUILD_DIR/build/build-contentbox/forgebox/stable-updates && box forgebox publish && cd $TRAVIS_BUILD_DIR;
  fi

# Slack Notifications
notifications:
  slack:
    secure: FIHlTn/YO7Wgumm1uIqmoEsqjQA7fV0AE94Rjc5yKzM3AquQa8HicgDVVk0d2GrKRnl0xt3j4ZJV//VJyIjlCd/QVKuj48R2ChjEY2im3+99HFPafCUI5/S2uyowKU6mJTFonH9v6p41eqxdbiAxJdDGOT0V2Gpt3UBSNuHz8ED9/aIHqv+P7M+VD6Xd2XYwctPniWlaSWx57sWcnG/VkFG45qFQAyha64uxOOe4M3ZmG/n5FfauZ8cBVLiRKEIr+CyNhh1ujfzi7+4uzMlSNL5t/BbZamAQuZzqGzGQ9RVvIlyPgUGNJtDEE/hWS09aagXF5T6EMj00szizErh4J1/x4qZwml5+TcBN31E0QmAhCtZe85sr3tYgic+hEz9XX1yymQzf/C7n4to2yNvq0r4g51xDk8IuP95WEh7zaqLlvFZvBFgxpHZBMYlRvhytjOYDeIFRMcGwHZcXosaG2ejqDwcGq/LC4oeG4sSwmg9sdRrtcmcanrNqrBka86WYO6LntI3JdZ86/1ACEUHzhCCwvrKELc9Ji1xxGAgS7QKH+s2/hnJuiMyv73gOVLKYC+wPMLt+fvOmPLSEl+PJiAIlToBq1KUBg03RSQLfPOLD7OrJ8VvDZsEPwejqlGDyc4wRglS9OTi7SnN5LYHSDNDdGdREegWqq9qDHEYEVLI=